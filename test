#!/usr/bin/env bash
export MCD_CHAIN=${MCD_CHAIN:-testnet}
export ETH_FROM=$(seth accounts ls | sed 1q | awk '{print substr ($0, 0, 42)}')
export SETH_ASYNC=yes
export ETH_GAS=700000
source lib/test

testJoin() {
  echo "Test: $MCD_ILK join $1"
  lt=$(./bin/mcd gem balance vat)
  ./bin/mcd gem join $1
  gt=$(./bin/mcd gem balance vat)
  assertBalanceChanged $gt $lt $1
}

testExit() {
  echo "Test: $MCD_ILK exit $1"
  gt=$(./bin/mcd gem balance vat)
  ./bin/mcd gem exit $1
  lt=$(./bin/mcd gem balance vat)
  assertBalanceChanged $gt $lt $1
}

testLock() {
  echo "Test: $MCD_ILK lock $1"
  lt=$(./bin/mcd gem balance ink)
  ./bin/mcd frob $1 0
  gt=$(./bin/mcd gem balance ink)
  assertBalanceChanged $gt $lt $1
}

testFree() {
  echo "Test: $MCD_ILK free $1"
  lt=$(./bin/mcd gem balance vat)
  ./bin/mcd frob -- -$1 0
  gt=$(./bin/mcd gem balance vat)
  assertBalanceChanged $gt $lt $1
}

testDraw() {
  echo "Test: $MCD_ILK draw $1"
  lt=$(./bin/mcd dai balance vat)
  ./bin/mcd frob 0 $1
  gt=$(./bin/mcd dai balance vat)
  assertBalanceChanged $gt $lt $1
}

testWipe() {
  echo "Test: $MCD_ILK wipe $1"
  gt=$(./bin/mcd dai balance vat)
  ./bin/mcd frob -- 0 -$1
  lt=$(./bin/mcd dai balance vat)
  assertBalanceChanged $gt $lt $1
}

export MCD_ILK=ETH
testJoin 1000
testLock 100
testDraw 400
testWipe 400
testFree 100
testExit 1000

export MCD_ILK=REP
urn=MCD_URN=$(seth --to-bytes32 $ETH_FROM)
testJoin 1000
testLock 100
testDraw 400
testWipe 400
testFree 100
testExit 1000
