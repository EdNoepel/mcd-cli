#!/usr/bin/env bash
set -e
act=$1; shift

execute() {
  bytes=$(seth calldata "${@:2}")
  sig="execute(address,bytes memory)"
  seth send ${MCD_PROXY?} "$sig" "${1?}" "$bytes"
}

case $act in
  open) {
    ilk=$(mcd --require-ilk $0)
    guy=0x$(seth --to-word $MCD_PROXY)
    sig="open(address,bytes32)"
    export SETH_ASYNC=yes
    tx=$(execute $PROXY_ACTIONS $sig $CDP_MANAGER $ilk)
    echo >&2 -n "${0##*/}: Waiting for transaction receipt..."
    block=$(SETH_TICK=true seth receipt "$tx" blockNumber)
    block=$(seth --to-hex "$block")
    echo >&2
    sig="NewCdp(address,address,uint256)"
    sig=$(seth keccak "$(seth --from-ascii $sig)")
    logs=$(seth rpc eth_getLogs -- \
      -n {} \
        -s "${CDP_MANAGER?}" -i address \
        -s "$block"          -i fromBlock \
        -s "$block"          -i toBlock \
      -n [] \
        -s "$sig"  -i append \
        -s "$guy"  -i append \
      -i topics \
      -i append | echo "[$(paste -sd , -)]")
    hex=$(echo "$logs" | jshon -a -e data -u)
    echo "Opened: cdp $(seth --to-dec $hex)"
  };;
  give) {
    id=$(seth --to-word ${MCD_CDP?})
    sig="give(address,uint256,address)"
    to=$(seth --to-address $1)
    execute $PROXY_ACTIONS $sig ${CDP_MANAGER?} $id $to
  };;
  frob) {
    dink=$(seth --to-uint256 $(mcd --to-hex $(seth --to-wei "$1 eth")))
    dart=$(seth --to-uint256 $(mcd --to-hex $(seth --to-wei "$2 eth")))
    sig="frob(address,bytes32,bytes32,bytes32,bytes32,int,int)"
    ilk=$(mcd --require-ilk $0)
    urn=$(mcd --require-urn $0)
    execute ${PROXY_ACTIONS?} $sig $MCD_VAT $ilk $urn $urn $urn $dink $dart
    [[ $SETH_ASYNC != yes ]] && mcd urn
  };;
  join) {
    sig="gemJoin_join(address,bytes32,uint)"
    amt=$(seth --to-uint256 $(seth --to-hex $(seth --to-wei "$2 eth")))
    execute ${PROXY_ACTIONS?} $sig $(mcd gem adapter) $amt
  }
esac

