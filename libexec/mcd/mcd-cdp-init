#!/usr/bin/env bash
set -e
act=$1; shift
hex=$(seth --to-hex ${MCD_CDP?})
export CDP=0x$(seth --to-word $hex)

if [[ -z "$MCD_ILK" ]]; then
  sig="ilks(uint256)(bytes32)"
  MCD_ILK=$(seth call ${CDP_MANAGER?} $sig $CDP)
  export MCD_ILK=$(mcd --to-ascii $MCD_ILK)
fi

if [[ -z "$MCD_URN" ]]; then
  export MCD_URN=$(seth call $CDP_MANAGER 'urns(uint)(address)' $CDP)
fi

case $act in
  owner) {
    sig="lads(uint256)(address)"
    echo 0x$(seth call ${CDP_MANAGER?} $sig $CDP)
  };;
  give) {
    to=$(mcd --to-address $1)
    if [[ $MCD_PROXY == yes ]]; then
      sig="give(address,uint256,address)"
      mcd --proxy-exec $sig ${CDP_MANAGER?} $CDP $to
    else
      sig="move(uint256,address)"
      seth send ${CDP_MANAGER?} $sig $CDP $to
    fi
  };;
  frob) {
    dink=$(seth --to-uint256 $(mcd --to-hex $(seth --to-wei "$1 eth")))
    dart=$(seth --to-uint256 $(mcd --to-hex $(seth --to-wei "$2 eth")))
    if [[ $MCD_PROXY == yes ]]; then
      sig="frob(address,uint,address,int,int)"
      mcd --proxy-exec $sig $CDP_MANAGER $CDP $ETH_FROM $dink $dart
    else
      sig="frob(uint,address,int,int)"
      seth send ${CDP_MANAGER?} $sig $CDP $ETH_FROM $dink $dart
    fi
    [[ $SETH_ASYNC != yes ]] && mcd urn
  };;
  dai|gem) { exec mcd-cdp-$act "$@"; };;
  ilk|urn) { exec mcd-$act; };;
  *) {
    echo "Error: bad command: cdp $MCD_CDP $act"
    mcd help cdp
  };;
esac
