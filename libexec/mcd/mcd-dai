#!/usr/bin/env bash
### mcd-dai -- Vat dai balances
### Usage: mcd dai [<command>]
###
### Commands: balance [<address>]
###           supply
###           join <wad>
###           exit <wad>
###
### With `balance' get the vat balance for a given address (default: ETH_FROM).
### With `supply' get the total dai supply (`mcd debt').
### With `join' exchange DSToken Dai for Vat Dai.
### With `exit' exchange Vat Dai for DSToken Dai.
###
### Example: mcd dai balance
###          mcd dai join 72.50
set -e

mcd-dai() {
exec 3< <(mcd dai balance)
exec 4< <(mcd dai supply)
cat <<.
address
$(mcd dai address)

balance
$(cat <&3)

supply
$(cat <&4)

Dai Actions:

approve - Grant the join adapter ERC20 account access
join    - Move ERC20 Dai to the Vat
exit    - Move Vat Dai to the ERC20 account
.
}

mcd-dai-cmd() {
  exec 5< <(mcd dai $1 vat)
  exec 6< <(mcd dai $1 ext)
  echo "vat $(cat <&5) Vat $1"
  echo "ext $(cat <&6) ERC20 $1"
}

case $1 in
  address) {
    case $2 in
      vat) { echo ${MCD_VAT?};    };;
      ext) { echo ${MCD_DAI?};    };;
      "")  { mcd-dai-cmd address; };;
      *)   { mcd dai address;     };;
    esac
  };;
  balance) {
    urn=$(mcd --require-urn $0)
    case $2 in
      vat)   {
        sig="dai(bytes32)(uint256)"
        mcd --to-rad $(seth call ${MCD_VAT?} $sig $urn)
      };;
      ext) {
        sig="balanceOf(address)(uint)"
        mcd --to-wad $(seth call ${MCD_DAI?} $sig $(seth --to-address ${urn::40}))
      };;
      "")  { mcd-dai-cmd balance; };;
      *)   { mcd dai balance;     };;
    esac
  };;
  supply) {
    case $2 in
      vat)   { echo $(mcd debt); };;
      ext) {
        sig="totalSupply()(uint)"
        mcd --to-wad $(seth call "$MCD_DAI" $sig)
      };;
      "")  { mcd-dai-cmd supply; };;
      *)   { mcd dai supply;     };;
    esac
  };;
  allowance) {
    lad=$(mcd --require-from $0)
    sig="allowance(address,address)(uint)"
    allowance=$(seth call "$(mcd dai address)" $sig $lad $MCD_JOIN_DAI)
    echo $(mcd --to-wad $allowance)
  };;
  approve) {
    wad=$(seth --to-word $(seth --to-wei $2 eth))
    sig="approve(address,uint)(bool)"
    (set -x; seth send "$(mcd dai address)" $sig $MCD_JOIN_DAI $wad)
  };;
  join) {
    lad=$(mcd --require-from $0)
    allowance=$(mcd dai allowance)
    if (( $(echo "$2 > $allowance" | bc -l) )); then
      echo "Insufficient Dai token allowance ($allowance). Approval required: mcd dai approve $2"
      exit 1
    fi
    urn=$(seth --to-bytes32 $lad)
    wad=$(seth --to-word $(seth --to-wei $2 eth))
    (set -x; seth send $MCD_JOIN_DAI "join(bytes32, uint256)" $urn $wad)
  };;
  exit) {
    lad=$(mcd --require-from $0)
    wad=$(seth --to-word $(seth --to-wei $2 eth))
    (set -x; seth send $MCD_JOIN_DAI "exit(address, uint256)" $lad $wad)
  };;
  "") { mcd-dai;      };;
  *)  { mcd help dai; }
esac
