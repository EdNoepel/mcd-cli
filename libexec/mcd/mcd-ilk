#!/usr/bin/env bash
### mcd-ilk -- Get ilk state
### Usage: mcd --ilk=<id> ilk [<arg>]
###
### With no arguments, list all parameters
### With `<arg>` get a specified Ilk parameter
###
### Example: mcd --ilk=ETH ilk
###          mcd --ilk=ETH ilk spot
###          mcd --ilk=ETH ilk Art
set -e

id=$(mcd --require-ilk $0)

pit()  { mcd --pit-ilk $id;  }
vat()  { mcd --vat-ilk $id;  }
cat()  { mcd --cat-ilk $id;  }
drip() { mcd --drip-ilk $id; }
spot() { mcd --spot-ilk $id; }

p() { printf "%-4s %-42s %-10s\n" "$1" "$2" "$3"; }

mcd-ilk() {
  p "spot" $(mcd ilk spot) "Price with safety margin (USD)"
  p "line" $(mcd ilk line) "Debt ceiling (DAI)"
  p "take" $(mcd ilk take) "Rate scaling factor"
  p "rate" $(mcd ilk rate) "Debt scaling factor"
  p "Ink"  $(mcd ilk Ink)  "Total ($MCD_ILK)"
  p "Art"  $(mcd ilk Art)  "Total (DAI)"
  p "flip" $(mcd ilk flip) "Flip auction contract"
  p "chop" $(mcd ilk chop) "Liquidation penalty"
  p "lump" $(mcd ilk lump) "Flip auction lot size"
  p "tax"  $(mcd ilk tax)
  p "rho"  $(mcd ilk rho)  "Last drip timestamp"
  p "pip"  $(mcd ilk pip)  "Price feed contract"
  p "mat"  $(mcd ilk mat)  "Liquidation ratio"
}

case $1 in
  spot)    { pit  | mcd --to-ray $(mcd --slice 0 64);   };;
  line)    { pit  | mcd --to-wad $(mcd --slice 65 64);  };;
  take)    { vat  | mcd --to-ray $(mcd --slice 0 64);   };;
  rate)    { vat  | mcd --to-ray $(mcd --slice 65 64);  };;
  Ink|ink) { vat  | mcd --to-wad $(mcd --slice 130 64); };;
  Art|art) { vat  | mcd --to-wad $(mcd --slice 195 64); };;
  flip)    { cat  | echo 0x$(mcd --slice 0 40);         };;
  chop)    { cat  | mcd --to-ray $(mcd --slice 41 64);  };;
  lump)    { vat  | mcd --to-wad $(mcd --slice 105 64); };;
  tax)     { drip | mcd --to-ray $(mcd --slice 0 64);   };;
  rho)     { drip | mcd --to-dec $(mcd --slice 65 64);  };;
  pip)     { spot | echo 0x$(mcd --slice 0 40);         };;
  mat)     { spot | mcd --to-ray $(mcd --slice 41 64);  };;
  "")      { mcd-ilk;                                   };;
  *)       { mcd help ilk;                              }
esac
