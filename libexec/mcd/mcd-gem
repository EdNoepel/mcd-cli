#!/usr/bin/env bash
### mcd-gem -- Collateral management
### Usage: mcd --ilk=<id> [--urn=<index>] gem [<command>]
###
### Commands: gem balance            Print balances for a given urn (default: ETH_FROM)
###           gem join <wad>         Add collateral to the system
###           gem exit <wad> [<guy>] Remove collateral from the system
###
### Example:  mcd --ilk=ETH-A gem balance
###           mcd --ilk=ETH-A gem join 42
set -e

mcd-gem() {
cat <<.
Gem: Governance-approved collateral tokens

$(mcd ilks)

$(mcd gem help)
.
}


case $1 in
  adapter) {
    mcd --require-ilk &>/dev/null
    ilk=$(tr '-' '_' <<<$MCD_ILK)
    echo $(eval echo "\$MCD_JOIN_$ilk")
  };;
  gem|address) {
    ilk=$(mcd --require-ilk $0)
    gem=$(seth call $(mcd gem adapter) 'gem()')
    echo "0x$(seth --abi-decode 'f()(address)' $gem)"
  };;
  symbol) {
    mcd ilks | sed -n "/$MCD_ILK/p" | awk '{print $2}'
  };;
  balance) {
    ilk=$(mcd --require-ilk $0)
    urn=$(mcd --require-urn $0)
    case $2 in
      vat) {
        sig="gem(bytes32,bytes32)(uint256)"
        mcd --to-wad $(seth call ${MCD_VAT?} "$sig" "$ilk" "$urn")
      };;
      ink) { mcd --ilk=${MCD_ILK} urn ink; };;
      ext) {
        sig="balanceOf(address)(uint)"
        mcd --to-wad $(seth call $(mcd gem address) "$sig" "$MCD_GUY")
      };;
      "")   {
        exec 3< <(mcd gem balance vat)
        exec 4< <(mcd gem balance ink)
        exec 5< <(mcd gem balance ext)
        echo "vat $(cat <&3) Free collateral ($MCD_ILK)"
        echo "ink $(cat <&4) Locked collateral ($MCD_ILK)"
        echo "ext $(cat <&5) External account balance ($MCD_ILK)"
      };;
      *)   { mcd gem balance; };;
    esac
  };;
  supply) {
    ilk=$(mcd --require-ilk $0)
    case $2 in
      mcd) { mcd gem-supply; };;
      ext) { mcd gem-supply-ext; };;
      "")   {
        exec 3< <(mcd gem supply mcd)
        exec 4< <(mcd gem supply ext)
        echo "mcd $(cat <&3) Total system balance ($MCD_ILK)"
        echo "ext $(cat <&4) Total supply ($MCD_ILK)"
      };;
      *)   { mcd gem supply; };;
    esac
  };;
  join) {
    ilk=$(mcd --require-ilk $0)
    mcd gem-join $2;
  };;
  exit) {
    ilk=$(mcd --require-ilk $0)
    mcd gem-exit $2;
  };;
  "")   { mcd-gem; };;
  *)    { mcd help gem; }
esac
