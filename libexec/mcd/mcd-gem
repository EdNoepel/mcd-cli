#!/usr/bin/env bash
### mcd-gem -- Collateral management
### Usage: mcd --ilk=<id> [--urn=<id>] gem [<command>]
###
### Commands: gem balance         Print balances for a given urn (default: ETH_FROM)
###           gem join     <wad>  Add collateral to the system
###           gem exit     <wad>  Remove collateral from the system
###
### Example:  mcd --ilk=ETH gem balance
###           mcd --ilk=ETH gem join 42
set -e

p() { printf "%-3s %-48s %-10s\n" "$1" "$2" "$3"; }

mcd-gem() {
cat <<.
Gem: Collateral tokens approved by system governance

$(mcd ilks | tr -s ' ' | cut -d ' ' -f 1,3)

$(mcd gem help)
.
}

case $1 in
  balance) {
    ilk=$(mcd --require-ilk $0)
    urn=$(mcd --require-urn $0)
    case $2 in
      vat) {
        sig="gem(bytes32,bytes32)(uint256)"
        mcd --to-rad $(seth call ${MCD_VAT?} "$sig" "$ilk" "$urn")
      };;
      ink) { mcd --ilk=${MCD_ILK} urn ink; };;
      ext) { mcd gem-balance-ext $urn; };;
      "")   {
        exec 3< <(mcd gem balance vat)
        exec 4< <(mcd gem balance ink)
        exec 5< <(mcd gem balance ext)
        p "vat" $(cat <&3) "Free collateral ($MCD_ILK)"
        p "ink" $(cat <&4) "Locked collateral ($MCD_ILK)"
        p "ext" $(cat <&5) "External account balance ($MCD_ILK)"
      };;
      *)   { mcd gem balance; };;
    esac
  };;
  join) { mcd gem-join $2; };;
  exit) { mcd gem-exit $2; };;
  "")   { mcd-gem; };;
  *)    { mcd help gem; }
esac
