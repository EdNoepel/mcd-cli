#!/usr/bin/env bash
### McDai - Multi-collateral Dai

OPTS="mcd [<options>] <command> [<args>]
mcd [<command>] --help
--
  Connection options:
C,chain=chain         chain config - kovan , mainnet, or rpc testnet

  Transaction Options:
F,from=address        account to send from
G,gas=number          number of gas units to provide

  Config Options:
J,config=json         deployment addresses

  MCD options:
I,ilk=address         ilk address
U,urn=address         urn address

  Filter options:
B,block=number        from block
"

set -e

if ! [[ $SETH_INIT ]]; then
  export SETH_INIT=1
  [[ -e ~/.sethrc ]] && . ~/.sethrc
fi

if [[ $2 = --help ]]; then
  exec "${0##*/}" help -- "$1"
elif [[ $1 = -* ]] && command -v "${0##*/}-$1" &>/dev/null; then
  exec "${0##*/}-$1" "${@:2}"
fi

eval "$(git rev-parse --parseopt -- "$@" <<<"$OPTS" || echo exit $?)"

while [[ $1 ]]; do
  case $1 in
    --)             shift; break;;

    -C|--chain)     shift; export MCD_CHAIN=$1;;
    -J|--config)    shift; export MCD_CONFIG=$1;;

    -I|--ilk)       shift; export MCD_ILK=$1;;
    -U|--urn)       shift; export MCD_URN=$1;;

    -B|--block)     shift; export ETH_BLOCK=$1;;

    -F|--from)      shift; export ETH_FROM=$1;;
    -G|--gas)       shift; export ETH_GAS=$1;;

    *) printf "${0##*/}: unrecognised option: %q\n" "--$1"; exit 1
  esac; shift
done

export_config() {
  conf=${MCD_CONFIG:-$1}
  [[ ! -f "$conf" ]] && echo "File not found: $conf" && exit 1
  entries=$(cat $conf | jq -r "to_entries|map(\"\(.key)=\(.value|tostring)\")|.[]")
  for e in $entries; do export "$e"; done
}

case "$MCD_CHAIN" in
  mainnet)
    export SETH_CHAIN=mainnet
    export ETH_LOGS_API=etherscan
    export ETHERSCAN_API_URL=https://api.etherscan.io/api
    export_config ${0%/*}/conf/mainnet.json;
    ;;
  testnet)
    export ETH_RPC_URL=http://127.0.0.1:8545
    export ETH_LOGS_API=rpc
    export ETH_KEYSTORE=~/.dapp/testnet/8545/keystore
    export ETH_FROM=$(seth accounts ls | sed 1q | awk '{print substr ($0, 0, 42)}')
    export_config ~/.dapp/testnet/8545/config/addresses.json;
    ;;
  *) # default to kovan
    export SETH_CHAIN=kovan
    export ETH_LOGS_API=etherscan
    export ETHERSCAN_API_URL=https://api-kovan.etherscan.io/api
    export_config ${0%/*}/conf/kovan.json
    ;;
esac

"${0##*/}-${1-help}" "${@:2}"
